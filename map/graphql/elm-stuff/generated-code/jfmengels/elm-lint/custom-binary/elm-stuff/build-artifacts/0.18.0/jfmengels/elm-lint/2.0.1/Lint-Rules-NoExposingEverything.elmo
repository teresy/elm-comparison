var _jfmengels$elm_lint$Lint_Rules_NoExposingEverything$createError = function (name) {
	return A2(
		_jfmengels$elm_lint$Lint_Types$LintError,
		'NoExposingEverything',
		A2(
			_elm_lang$core$Basics_ops['++'],
			'Do not expose everything from module ',
			A2(_elm_lang$core$Basics_ops['++'], name, ' using (..)')));
};
var _jfmengels$elm_lint$Lint_Rules_NoExposingEverything$reportModule = function (name) {
	return _jfmengels$elm_lint$Lint_Rules_NoExposingEverything$createError(
		A2(_elm_lang$core$String$join, '.', name));
};
var _jfmengels$elm_lint$Lint_Rules_NoExposingEverything$statementFn = F2(
	function (ctx, node) {
		var _p0 = node;
		_v0_2:
		do {
			if (_p0.ctor === 'Enter') {
				switch (_p0._0.ctor) {
					case 'ModuleDeclaration':
						if (_p0._0._1.ctor === 'AllExport') {
							return {
								ctor: '_Tuple2',
								_0: {
									ctor: '::',
									_0: _jfmengels$elm_lint$Lint_Rules_NoExposingEverything$reportModule(_p0._0._0),
									_1: {ctor: '[]'}
								},
								_1: ctx
							};
						} else {
							break _v0_2;
						}
					case 'PortModuleDeclaration':
						if (_p0._0._1.ctor === 'AllExport') {
							return {
								ctor: '_Tuple2',
								_0: {
									ctor: '::',
									_0: _jfmengels$elm_lint$Lint_Rules_NoExposingEverything$reportModule(_p0._0._0),
									_1: {ctor: '[]'}
								},
								_1: ctx
							};
						} else {
							break _v0_2;
						}
					default:
						break _v0_2;
				}
			} else {
				break _v0_2;
			}
		} while(false);
		return {
			ctor: '_Tuple2',
			_0: {ctor: '[]'},
			_1: ctx
		};
	});
var _jfmengels$elm_lint$Lint_Rules_NoExposingEverything$Context = {};
var _jfmengels$elm_lint$Lint_Rules_NoExposingEverything$implementation = {
	statementFn: _jfmengels$elm_lint$Lint_Rules_NoExposingEverything$statementFn,
	typeFn: _jfmengels$elm_lint$Lint$doNothing,
	expressionFn: _jfmengels$elm_lint$Lint$doNothing,
	moduleEndFn: function (ctx) {
		return {
			ctor: '_Tuple2',
			_0: {ctor: '[]'},
			_1: ctx
		};
	},
	initialContext: _jfmengels$elm_lint$Lint_Rules_NoExposingEverything$Context
};
var _jfmengels$elm_lint$Lint_Rules_NoExposingEverything$rule = function (input) {
	return A2(_jfmengels$elm_lint$Lint$lint, input, _jfmengels$elm_lint$Lint_Rules_NoExposingEverything$implementation);
};
